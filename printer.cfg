[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1B00120012504B4633373520-if00


## Imports
[include klicky.cfg]

# General?
[virtual_sdcard]
path: ~/printer_data/gcodes

# Exclude Object config
[exclude_object]

# Pause and resume
[pause_resume]

[display_status]

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

## can0
[temperature_sensor CANBOARD]
sensor_type: temperature_mcu
sensor_mcu: can0

## CAN PINS
[board_pins EBB36_G0B1_v1.1] 
mcu: can0
aliases:
aliases_step:
    EXT_EN=PD2,EXT_STEP=PD0,EXT_DIR=PD1,EXT_UART=PA15
aliases_limitsw: # these are preferred for endstops (including klicky)
    LIMIT_1=PB9,LIMIT_2=PB5
aliases_fans:
    FAN2=PB3,FAN1=PA0
aliases_thermistors:
    TH0=PA3,PT100_CS=PA4,PT100_SCLK=PA5,PT100_MISO=PA6,PT100_MOSI=PA7
aliases_heaters:
    HE0=PB13
aliases_rgb:
    RGBLED=PD3
aliases_adxl:
    ADXL_CS=PB12,ADXL_SCLK=PB10,ADXL_MISO=PB2,ADXL_MOSI=PB11
aliases_i2c:
    AUX0=PB3,AUX1=PB4

## can0
[mcu can0]
canbus_uuid: a709150d2965

## ADXL345
[adxl345]
cs_pin: can0:ADXL_CS
spi_software_sclk_pin: can0:ADXL_SCLK
spi_software_mosi_pin: can0:ADXL_MOSI
spi_software_miso_pin: can0:ADXL_MISO
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    80,80,20  # an example for a 350mm printer


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## B Stepper - Left
## X Stepper on Motor2
[stepper_x]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
microsteps: 32
rotation_distance: 40
endstop_pin: ^can0:LIMIT_2
position_min: 0
position_endstop: 160
position_max: 160
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PF13
interpolate: True
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 9999

## A Stepper - Right
## Y Stepper on Motor8 (A Motor) 
[stepper_y]
step_pin: PD10
dir_pin: PD8
enable_pin: !PD9
microsteps: 32
rotation_distance: 40
endstop_pin: ^PC1
position_min: 0
position_endstop: 179
position_max: 196
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC7
interpolate: True
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 9999

#####################################################################
# 	Z Stepper Settings
#####################################################################
## Z0 Stepper - Front Left on MOTOR1
[stepper_z]
step_pin: PE2
dir_pin: !PB4
enable_pin: !PC11
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8 
microsteps: 32
endstop_pin: PC2
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 160
position_min: -2.5
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC10
interpolate: true
run_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 9999

##	Z1 Stepper - Rear Center on Motor4
[stepper_z1]
step_pin: PD3
dir_pin: !PD2
enable_pin: !PD5
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: true
run_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 9999

##	Z2 Stepper - FRont Right on Motor7
[stepper_z2]
step_pin:PD12
dir_pin: !PD11
enable_pin: !PD14
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8 
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PD13
interpolate: true
run_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 9999

#####################################################################
# 	Extruder
#####################################################################

#	E0 on Motor7
[extruder]
step_pin: can0:EXT_STEP
dir_pin: can0:EXT_DIR
enable_pin: !can0:EXT_EN
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 23.36                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: can0:HE0
sensor_pin: can0:TH0
sensor_type: Generic 3950
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.045
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on Motor7
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: can0:EXT_UART
interpolate: false
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PB7
#sensor_type: ATC Semitec 104GT-2
sensor_type: Generic 3950
sensor_pin: PA1
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##  NPN and PNP proximity switch types can be set by jumper
pin: ^can0:LIMIT_1
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 4

####################################################################
## BED MESH CONFIGURATION
####################################################################

[bed_mesh]
speed: 800
horizontal_move_z: 10
mesh_min: 10, 30
mesh_max: 150,130
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

#####################################################################
# 	Fan Control
#####################################################################
##  Hotend Fan - FAN0
[heater_fan hotend_fan]
pin: !can0:FAN2
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

## PART COOLING - FAN1
[fan]
pin: can0:FAN1
kick_start_time: 0.25
cycle_time: 0.15
off_below: 0.10

[multi_pin controller_fan_pins]
pins: PE6, PE0

[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
pin:multi_pin: controller_fan_pins
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.2
off_below: 0.10

#####################################################################
# 	LED Control
#####################################################################
#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PB5
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[z_tilt]
# Uncomment below for 250mm build
z_positions:
    -50, -13
    80, 205
    205, -13
points:
    20, 0
    80, 100
    140, 0
speed: 800
horizontal_move_z: 10
retries: 15
retry_tolerance: 0.0075


#####################################################################
#	Auto Z calibration
#####################################################################
#With a smaller offset value, the nozzle is more away from the bed!
[z_calibration]
nozzle_xy_position:   97,171
switch_xy_position:   91,145
bed_xy_position:      80,80
switch_offset:        0.485
samples:              3
samples_tolerance_retries: 6
start_gcode:          ATTACH_PROBE
end_gcode:            DOCK_PROBE
max_deviation: 22
speed: 800


#####################################################################
#	Input Shaper
#####################################################################
[input_shaper]
shaper_freq_x: 84
shaper_type_x: ei
shaper_freq_y: 35
shaper_type_y: mzv


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    G0 X80 Y80 Z30 F3600
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED|default(60)|float %}
    M190 S{BED_TEMP+3}
    M140 S{BED_TEMP} # start cooling
    M190 S{BED_TEMP} # wait for bed temp
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(210)|float %}
    M109 S{EXTRUDER_TEMP-30} # wait for preheat
    G4 P10000
    G32                            ; home all axes
    Attach_Probe_Lock
    CALIBRATE_Z
    BED_MESH_CALIBRATE
    Dock_Probe_Unlock
    G1 Z50 F3000                   ; move nozzle away from bed
    M109 S{EXTRUDER_TEMP} # wait for extruder temp
    PURGE_BLOB
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro PURGE_BLOB]
gcode:                                                 
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning
    M83                             ; extruder relative mode
    G1 X40 Y0 Z1 F18000             ; Go to start pos for perge line
    G1 Z0.2 F1000                   ; lower extruder
    G92 E0                          ; zero the extruder
    G1 X120 E15 F900.0           ; purge line
    G1 Y1 F1000.0                   ; move up in y a bit
    G1 X40 E15 F1100.0           ; purge line reverse
    G92 E0

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X80 Y90 F3600            ; park nozzle at rear
    SET_GCODE_OFFSET Z=0.0         ; reset Z Offset for auto z
    BED_MESH_CLEAR


# Pause and Resume Macros
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y-10} F6000   ; park toolhead at rear center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(50)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
                                  ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        clean_nozzle
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause


[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[filament_motion_sensor filament_sensor]
detection_length: 28
extruder: extruder
switch_pin: ^PC0
pause_on_runout: True
event_delay: 4.0
insert_gcode:
    M117 Insert Detected
runout_gcode:
    M117 Runout Detected

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.658
#*# pid_ki = 1.514
#*# pid_kd = 272.919
#*#
#*# [stepper_z]
#*# position_endstop = 0.290
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.798
#*# pid_ki = 1.256
#*# pid_kd = 103.447
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.000000, -0.006250, -0.001250, -0.006250, -0.023750
#*# 	  0.015000, 0.007500, -0.005000, -0.015000, -0.036250
#*# 	  0.023750, 0.011250, 0.000000, -0.022500, -0.041250
#*# 	  0.055000, 0.021250, 0.006250, -0.023750, -0.055000
#*# 	  0.025000, -0.001250, -0.020000, -0.061250, -0.093750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 150.0
#*# min_y = 30.0
#*# max_y = 130.0
